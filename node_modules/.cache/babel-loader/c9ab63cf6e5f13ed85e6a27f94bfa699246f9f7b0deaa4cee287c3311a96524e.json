{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\garvit.gaur\\\\Desktop\\\\ECommerce_Product_Page\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ProductCard from './components/ProductCard';\nimport Cart from './components/Cart';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [cart, setCart] = useState([]);\n  const products = [{\n    id: 1,\n    name: 'Apple Watch Series 7 GPS',\n    price: 599,\n    image: 'https://via.placeholder.com/300',\n    // Update this image URL accordingly\n    quantity: 1\n  }, {\n    id: 2,\n    name: 'Product 2',\n    price: 100,\n    image: 'https://via.placeholder.com/300',\n    quantity: 1\n  }];\n  const addToCart = product => {\n    setCart(prevCart => {\n      const productIndex = prevCart.findIndex(item => item.id === product.id);\n      if (productIndex !== -1) {\n        // If the product already exists in the cart, increase the quantity\n        const updatedCart = prevCart.map(item => item.id === product.id ? {\n          ...item,\n          quantity: item.quantity + 1\n        } : item);\n        return updatedCart;\n      } else {\n        // If the product doesn't exist, add it to the cart\n        return [...prevCart, {\n          ...product\n        }];\n      }\n    });\n  };\n\n  // Define the updateQuantity function\n  const updateQuantity = (productId, quantity) => {\n    if (quantity < 1) return; // Prevent setting quantity to less than 1\n    const updatedCart = cart.map(item => item.id === productId ? {\n      ...item,\n      quantity\n    } : item);\n    setCart(updatedCart);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App p-4 bg-gray-100 min-h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-4xl font-bold text-center mb-8\",\n      children: \"Product Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",\n      children: products.map(product => /*#__PURE__*/_jsxDEV(ProductCard, {\n        product: product,\n        addToCart: addToCart\n      }, product.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Cart, {\n      cart: cart,\n      updateQuantity: updateQuantity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"ZqFaEIYkzI5UoYUmTgmqHbYYm/0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ProductCard","Cart","jsxDEV","_jsxDEV","App","_s","cart","setCart","products","id","name","price","image","quantity","addToCart","product","prevCart","productIndex","findIndex","item","updatedCart","map","updateQuantity","productId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/garvit.gaur/Desktop/ECommerce_Product_Page/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport ProductCard from './components/ProductCard';\r\nimport Cart from './components/Cart';\r\nimport './styles.css';\r\n\r\nfunction App() {\r\n    const [cart, setCart] = useState([]);\r\n    const products = [\r\n        {\r\n            id: 1,\r\n            name: 'Apple Watch Series 7 GPS',\r\n            price: 599,\r\n            image: 'https://via.placeholder.com/300', // Update this image URL accordingly\r\n            quantity: 1,\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Product 2',\r\n            price: 100,\r\n            image: 'https://via.placeholder.com/300',\r\n            quantity: 1,\r\n        }\r\n    ];\r\n\r\n    const addToCart = (product) => {\r\n        setCart(prevCart => {\r\n            const productIndex = prevCart.findIndex(item => item.id === product.id);\r\n\r\n            if (productIndex !== -1) {\r\n                // If the product already exists in the cart, increase the quantity\r\n                const updatedCart = prevCart.map(item =>\r\n                    item.id === product.id ? { ...item, quantity: item.quantity + 1 } : item\r\n                );\r\n                return updatedCart;\r\n            } else {\r\n                // If the product doesn't exist, add it to the cart\r\n                return [...prevCart, { ...product }];\r\n            }\r\n        });\r\n    };\r\n\r\n    // Define the updateQuantity function\r\n    const updateQuantity = (productId, quantity) => {\r\n        if (quantity < 1) return; // Prevent setting quantity to less than 1\r\n        const updatedCart = cart.map(item => \r\n            item.id === productId ? { ...item, quantity } : item\r\n        );\r\n        setCart(updatedCart);\r\n    };\r\n\r\n    return (\r\n        <div className=\"App p-4 bg-gray-100 min-h-screen\">\r\n            <h1 className=\"text-4xl font-bold text-center mb-8\">Product Page</h1>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n                {products.map(product => (\r\n                    <ProductCard key={product.id} product={product} addToCart={addToCart} />\r\n                ))}\r\n            </div>\r\n            <Cart cart={cart} updateQuantity={updateQuantity} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}