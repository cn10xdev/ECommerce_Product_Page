{"ast":null,"code":"var _jsxFileName = \"/workspaces/ECommerce_Product_Page/src/components/Cart.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Cart({\n  cart,\n  updateQuantity\n}) {\n  _s();\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      onClick: handleShow,\n      id: \"cartBtn\",\n      children: \"Cart Items\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Cart Items\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cart\",\n          style: {\n            color: 'black'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Cart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this), cart.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Your cart is empty\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 17\n          }, this) : cart.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cart-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Price: $\", item.price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              min: \"1\",\n              value: item.quantity,\n              onChange: e => updateQuantity(item.id, parseInt(e.target.value))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 25\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 21\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleClose,\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n\n  /*return (\n        <div className=\"cart\">\n            <h2>Cart</h2>\n            {cart.length === 0 ? (\n                <p>Your cart is empty</p>\n            ) : (\n                cart.map(item => (\n                    <div key={item.id} className=\"cart-item\">\n                        <p>{item.name}</p>\n                        <p>Price: ${item.price}</p>\n                        <input\n                            type=\"number\"\n                            min=\"1\"\n                            value={item.quantity}\n                            onChange={(e) => updateQuantity(item.id, parseInt(e.target.value))}\n                        />\n                    </div>\n                ))\n            )}\n        </div>\n    );*/\n}\n_s(Cart, \"NKb1ZOdhT+qUsWLXSgjSS2bk2C4=\");\n_c = Cart;\nexport default Cart;\nvar _c;\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"names":["React","useState","Button","Modal","jsxDEV","_jsxDEV","Fragment","_Fragment","Cart","cart","updateQuantity","_s","show","setShow","handleClose","handleShow","children","variant","onClick","id","fileName","_jsxFileName","lineNumber","columnNumber","onHide","Header","closeButton","Title","Body","className","style","color","length","map","item","name","price","type","min","value","quantity","onChange","e","parseInt","target","Footer","_c","$RefreshReg$"],"sources":["/workspaces/ECommerce_Product_Page/src/components/Cart.js"],"sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\n\nfunction Cart({ cart, updateQuantity }) {\n    \n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  return (\n    <>\n      <Button variant=\"primary\" onClick={handleShow} id='cartBtn'>\n        Cart Items\n      </Button>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Cart Items</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n        <div className=\"cart\" style={{color: 'black'}}>\n            <h2>Cart</h2>\n            {cart.length === 0 ? (\n                <p>Your cart is empty</p>\n            ) : (\n                cart.map(item => (\n                    <div key={item.id} className=\"cart-item\">\n                        <p>{item.name}</p>\n                        <p>Price: ${item.price}</p>\n                        <input\n                            type=\"number\"\n                            min=\"1\"\n                            value={item.quantity}\n                            onChange={(e) => updateQuantity(item.id, parseInt(e.target.value))}\n                        />\n                    </div>\n                ))\n            )}\n        </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n            Save Changes\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n\n\n  /*return (\n        <div className=\"cart\">\n            <h2>Cart</h2>\n            {cart.length === 0 ? (\n                <p>Your cart is empty</p>\n            ) : (\n                cart.map(item => (\n                    <div key={item.id} className=\"cart-item\">\n                        <p>{item.name}</p>\n                        <p>Price: ${item.price}</p>\n                        <input\n                            type=\"number\"\n                            min=\"1\"\n                            value={item.quantity}\n                            onChange={(e) => updateQuantity(item.id, parseInt(e.target.value))}\n                        />\n                    </div>\n                ))\n            )}\n        </div>\n    );*/\n}\n\nexport default Cart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}