{"ast":null,"code":"var _jsxFileName = \"/workspaces/ECommerce_Product_Page/src/components/NavbarToggle.js\";\nimport React from \"react\";\n//import styled from \"styled-components\";\nimport Button from 'react-bootstrap/Button';\n\n//export class ToggleTheme extends React.Component{\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function ToggleTheme(props) {\n  let themeButtonDisplay;\n  const {\n    data\n  } = props;\n  console.log(data);\n  if (data) {\n    themeButtonDisplay = \"Dark Mode\";\n  } else {\n    themeButtonDisplay = \"Light Mode\";\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      id: \"toggle-button\",\n      onClick: () => props.toggleThemeFunc(),\n      children: \"Primary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"toggle-button\",\n      onClick: () => props.toggleThemeFunc(),\n      children: themeButtonDisplay\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true);\n}\n_c = ToggleTheme;\nvar _c;\n$RefreshReg$(_c, \"ToggleTheme\");","map":{"version":3,"names":["React","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","ToggleTheme","props","themeButtonDisplay","data","console","log","children","variant","id","onClick","toggleThemeFunc","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/workspaces/ECommerce_Product_Page/src/components/NavbarToggle.js"],"sourcesContent":["import React from \"react\";\n//import styled from \"styled-components\";\nimport Button from 'react-bootstrap/Button';\n\n//export class ToggleTheme extends React.Component{\nexport function ToggleTheme(props){\n\n        let themeButtonDisplay;\n        const {data} = props\n        \n        console.log(data);\n        if(data){\n             themeButtonDisplay = \"Dark Mode\"\n        }else{\n             themeButtonDisplay = \"Light Mode\"\n        }\n        return(\n           \n            <>\n            <Button variant=\"primary\" id=\"toggle-button\" onClick={()=> props.toggleThemeFunc()}>Primary</Button>\n                {<button id=\"toggle-button\" onClick={()=> props.toggleThemeFunc()}>\n                    {themeButtonDisplay}\n                </button>}\n            </>\n        )\n    \n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA,OAAOC,MAAM,MAAM,wBAAwB;;AAE3C;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,OAAO,SAASC,WAAWA,CAACC,KAAK,EAAC;EAE1B,IAAIC,kBAAkB;EACtB,MAAM;IAACC;EAAI,CAAC,GAAGF,KAAK;EAEpBG,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;EACjB,IAAGA,IAAI,EAAC;IACHD,kBAAkB,GAAG,WAAW;EACrC,CAAC,MAAI;IACAA,kBAAkB,GAAG,YAAY;EACtC;EACA,oBAEIL,OAAA,CAAAE,SAAA;IAAAO,QAAA,gBACAT,OAAA,CAACF,MAAM;MAACY,OAAO,EAAC,SAAS;MAACC,EAAE,EAAC,eAAe;MAACC,OAAO,EAAEA,CAAA,KAAKR,KAAK,CAACS,eAAe,CAAC,CAAE;MAAAJ,QAAA,EAAC;IAAO;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC/FjB,OAAA;MAAQW,EAAE,EAAC,eAAe;MAACC,OAAO,EAAEA,CAAA,KAAKR,KAAK,CAACS,eAAe,CAAC,CAAE;MAAAJ,QAAA,EAC7DJ;IAAkB;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf,CAAC;EAAA,eACX,CAAC;AAGf;AAACC,EAAA,GArBef,WAAW;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}